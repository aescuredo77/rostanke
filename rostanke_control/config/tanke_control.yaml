rostanke:
  # Settings for ros_control hardware interface
  hardware_interface:
    joints:
      - front_left_base_wheel_joint
      - back_left_base_wheel_joint
      - front_right_base_wheel_joint 
      - back_right_base_wheel_joint
      - plat00_joint
      - plat02_joint
      

  # Publish all joint states
  joint_state_controller:
    type: "joint_state_controller/JointStateController"
    publish_rate: 10

  
  # Position Controllers
  joint1_position_controller:
    type: effort_controllers/JointPositionController
    joint: plat00_joint
    pid: {p: 50.0, i: 0.001, d: 1.0}
  
  joint2_position_controller:
    type: effort_controllers/JointPositionController
    joint: plat02_joint
    pid: {p: 50.0, i: 0.001, d: 1.0}
  
  tanke_base_controller:
    type: "diff_drive_controller/DiffDriveController"
    left_wheel: ['front_left_base_wheel_joint', 'back_left_base_wheel_joint']
    right_wheel: ['front_right_base_wheel_joint', 'back_right_base_wheel_joint']
    publish_rate: 50

    
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

    #pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
    #twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

    cmd_vel_timeout: 0.5
    #velocity_rolling_window_size: 2

    # Odometry fused with IMU is published by robot_localization, so
    # no need to publish a TF based on encoders alone.
    enable_odom_tf: true

    # Jetbot hardware does not provides wheel velocities
    estimate_velocity_from_position: true
    
    # Base frame_id
    base_frame_id: base_footprint
    allow_multiple_cmd_vel_publishers: true 

    wheel_separation : 0.106
    wheel_radius : 0.03

    # Wheel separation and radius multipliers
    wheel_separation_multiplier: 1.5 # default: 1.0
    wheel_radius_multiplier    : 1.0 # default: 1.0

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 50.0 #0.5   # m/s
        has_acceleration_limits: true
        max_acceleration       : 40.0 #0.6   # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 50.0 #2.0   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 40.0 #6.0   # rad/s^2